{"ast":null,"code":"var _jsxFileName = \"/Users/andychen/Projects/Todo-List-Application-Frontend/src/context/GlobalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  fetchingUser: true,\n  completeToDos: [],\n  incompleteToDos: []\n};\n\n// reducer\nconst globalReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.payload,\n        fetchingUser: false\n      };\n    case \"SET_COMPLETE_TODOS\":\n      return {\n        ...state,\n        completeToDos: action.payload\n      };\n    case \"SET_INCOMPLETE_TODOS\":\n      return {\n        ...state,\n        incompleteToDos: action.payload\n      };\n    case \"RESET_USER\":\n      return {\n        ...state,\n        user: null,\n        completeToDos: [],\n        incompleteToDos: [],\n        fetchingUser: false\n      };\n    default:\n      return state;\n  }\n};\n\n// create the context\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\n\n// provider component\nexport const GlobalProvider = props => {\n  _s();\n  const [state, dispatch] = useReducer(globalReducer, initialState);\n  useEffect(() => {\n    getCurrentUser();\n  }, []);\n\n  // action: get current user\n  const getCurrentUser = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const api = axios.create({\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const res = await api.get(\"api/auth/current\");\n      if (res.data) {\n        const toDosRes = await api.get(\"/api/tasks/user/get\");\n        if (toDosRes.data) {\n          dispatch({\n            type: \"SET_USER\",\n            payload: res.data\n          });\n          dispatch({\n            type: \"SET_COMPLETE_TODOS\",\n            payload: toDosRes.data.completeToDos\n          });\n          dispatch({\n            type: \"SET_INCOMPLETE_TODOS\",\n            payload: toDosRes.data.incompleteToDos\n          });\n        }\n      } else {\n        dispatch({\n          type: \"RESET_USER\"\n        });\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: \"RESET_USER\"\n      });\n    }\n  };\n  const logout = async () => {\n    try {\n      localStorage.removeItem(\"token\");\n      //await axios.get(\"/api/auth/logout\");\n\n      dispatch({\n        type: \"RESET_USER\"\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: \"RESET_USER\"\n      });\n    }\n  };\n  const addToDo = toDo => {\n    const newToDo = {\n      ...toDo\n    };\n    dispatch({\n      type: \"SET_INCOMPLETE_TODOS\",\n      payload: [newToDo, ...state.incompleteToDos]\n    });\n  };\n  const toDoComplete = toDo => {\n    dispatch({\n      type: \"SET_INCOMPLETE_TODOS\",\n      payload: state.incompleteToDos.filter(incompleteToDo => incompleteToDo.uuid !== toDo.uuid)\n    });\n    dispatch({\n      type: \"SET_COMPLETE_TODOS\",\n      payload: [toDo, ...state.completeToDos]\n    });\n  };\n  const toDoIncomplete = toDo => {\n    dispatch({\n      type: \"SET_COMPLETE_TODOS\",\n      payload: state.completeToDos.filter(completeToDo => completeToDo.uuid !== toDo.uuid)\n    });\n    const newIncompleteToDos = [toDo, ...state.incompleteToDos];\n    dispatch({\n      type: \"SET_INCOMPLETE_TODOS\",\n      payload: newIncompleteToDos.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n    });\n  };\n  const removeToDo = toDo => {\n    if (toDo.completed) {\n      dispatch({\n        type: \"SET_COMPLETE_TODOS\",\n        payload: state.completeToDos.filter(completeToDo => completeToDo.uuid !== toDo.uuid)\n      });\n    } else {\n      dispatch({\n        type: \"SET_INCOMPLETE_TODOS\",\n        payload: state.incompleteToDos.filter(incompleteToDo => incompleteToDo.uuid !== toDo.uuid)\n      });\n    }\n  };\n  const updateToDo = toDo => {\n    if (!toDo.completed) {\n      const newIncompleteToDos = state.incompleteToDos.map(incompleteToDo => incompleteToDo.uuid !== toDo.uuid ? incompleteToDo : toDo);\n      dispatch({\n        type: \"SET_INCOMPLETE_TODOS\",\n        payload: newIncompleteToDos\n      });\n    } else {\n      const newCompleteToDos = state.CompleteToDos.map(completeToDo => completeToDo.uuid !== toDo.uuid ? completeToDo : toDo);\n      dispatch({\n        type: \"SET_COMPLETE_TODOS\",\n        payload: newCompleteToDos\n      });\n    }\n  };\n  const value = {\n    ...state,\n    getCurrentUser,\n    logout,\n    addToDo,\n    toDoComplete,\n    toDoIncomplete,\n    removeToDo,\n    updateToDo\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = GlobalProvider;\nexport function useGlobalContext() {\n  _s2();\n  return useContext(GlobalContext);\n}\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsxDEV","_jsxDEV","initialState","user","fetchingUser","completeToDos","incompleteToDos","globalReducer","state","action","type","payload","GlobalContext","GlobalProvider","props","_s","dispatch","getCurrentUser","token","localStorage","getItem","api","create","headers","Authorization","res","get","data","toDosRes","err","console","log","logout","removeItem","addToDo","toDo","newToDo","toDoComplete","filter","incompleteToDo","uuid","toDoIncomplete","completeToDo","newIncompleteToDos","sort","a","b","Date","createdAt","removeToDo","completed","updateToDo","map","newCompleteToDos","CompleteToDos","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["/Users/andychen/Projects/Todo-List-Application-Frontend/src/context/GlobalContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// initial state\nconst initialState = {\n  user: null,\n  fetchingUser: true,\n  completeToDos: [],\n  incompleteToDos: [],\n};\n\n// reducer\nconst globalReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.payload,\n        fetchingUser: false,\n      };\n    case \"SET_COMPLETE_TODOS\":\n      return {\n        ...state,\n        completeToDos: action.payload,\n      };\n    case \"SET_INCOMPLETE_TODOS\":\n      return {\n        ...state,\n        incompleteToDos: action.payload,\n      };\n    case \"RESET_USER\":\n      return {\n        ...state,\n        user: null,\n        completeToDos: [],\n        incompleteToDos: [],\n        fetchingUser: false,\n      };\n    default:\n      return state;\n  }\n};\n\n// create the context\nexport const GlobalContext = createContext(initialState);\n\n// provider component\nexport const GlobalProvider = (props) => {\n  const [state, dispatch] = useReducer(globalReducer, initialState);\n\n  useEffect(() => {\n    getCurrentUser();\n  }, []);\n\n  // action: get current user\n  const getCurrentUser = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const api = axios.create({\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      const res = await api.get(\"api/auth/current\");\n      if (res.data) {\n        const toDosRes = await api.get(\"/api/tasks/user/get\");\n\n        if (toDosRes.data) {\n          dispatch({ type: \"SET_USER\", payload: res.data });\n          dispatch({\n            type: \"SET_COMPLETE_TODOS\",\n            payload: toDosRes.data.completeToDos,\n          });\n          dispatch({\n            type: \"SET_INCOMPLETE_TODOS\",\n            payload: toDosRes.data.incompleteToDos,\n          });\n        }\n      } else {\n        dispatch({ type: \"RESET_USER\" });\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch({ type: \"RESET_USER\" });\n    }\n  };\n  const logout = async () => {\n    try {\n      localStorage.removeItem(\"token\");\n      //await axios.get(\"/api/auth/logout\");\n\n      dispatch({ type: \"RESET_USER\" });\n    } catch (err) {\n      console.log(err);\n      dispatch({ type: \"RESET_USER\" });\n    }\n  };\n\n  const addToDo = (toDo) => {\n    const newToDo = { ...toDo };\n    dispatch({\n      type: \"SET_INCOMPLETE_TODOS\",\n      payload: [newToDo, ...state.incompleteToDos],\n    });\n  };\n\n  const toDoComplete = (toDo) => {\n    dispatch({\n      type: \"SET_INCOMPLETE_TODOS\",\n      payload: state.incompleteToDos.filter(\n        (incompleteToDo) => incompleteToDo.uuid !== toDo.uuid\n      ),\n    });\n    dispatch({\n      type: \"SET_COMPLETE_TODOS\",\n      payload: [toDo, ...state.completeToDos],\n    });\n  };\n\n  const toDoIncomplete = (toDo) => {\n    dispatch({\n      type: \"SET_COMPLETE_TODOS\",\n      payload: state.completeToDos.filter(\n        (completeToDo) => completeToDo.uuid !== toDo.uuid\n      ),\n    });\n    const newIncompleteToDos = [toDo, ...state.incompleteToDos];\n    dispatch({\n      type: \"SET_INCOMPLETE_TODOS\",\n      payload: newIncompleteToDos.sort(\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n      ),\n    });\n  };\n\n  const removeToDo = (toDo) => {\n    if (toDo.completed) {\n      dispatch({\n        type: \"SET_COMPLETE_TODOS\",\n        payload: state.completeToDos.filter(\n          (completeToDo) => completeToDo.uuid !== toDo.uuid\n        ),\n      });\n    } else {\n      dispatch({\n        type: \"SET_INCOMPLETE_TODOS\",\n        payload: state.incompleteToDos.filter(\n          (incompleteToDo) => incompleteToDo.uuid !== toDo.uuid\n        ),\n      });\n    }\n  };\n\n  const updateToDo = (toDo) => {\n    if (!toDo.completed) {\n      const newIncompleteToDos = state.incompleteToDos.map((incompleteToDo) =>\n        incompleteToDo.uuid !== toDo.uuid ? incompleteToDo : toDo\n      );\n      dispatch({\n        type: \"SET_INCOMPLETE_TODOS\",\n        payload: newIncompleteToDos,\n      });\n    }else{\n      const newCompleteToDos = state.CompleteToDos.map((completeToDo) =>\n      completeToDo.uuid !== toDo.uuid ? completeToDo : toDo\n    );\n    dispatch({\n      type: \"SET_COMPLETE_TODOS\",\n      payload: newCompleteToDos,\n    });\n    }\n  };\n  const value = {\n    ...state,\n    getCurrentUser,\n    logout,\n    addToDo,\n    toDoComplete,\n    toDoIncomplete,\n    removeToDo,\n    updateToDo,\n  };\n\n  return (\n    <GlobalContext.Provider value={value}>\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport function useGlobalContext() {\n  return useContext(GlobalContext);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}